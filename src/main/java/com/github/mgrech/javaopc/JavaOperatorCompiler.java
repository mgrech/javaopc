package com.github.mgrech.javaopc;

import com.github.javaparser.JavaParser;
import com.github.javaparser.ParseStart;
import com.github.javaparser.ParserConfiguration;
import com.github.javaparser.Provider;
import com.github.javaparser.ast.CompilationUnit;
import com.github.javaparser.resolution.SymbolResolver;
import com.github.javaparser.symbolsolver.JavaSymbolSolver;
import com.github.javaparser.symbolsolver.model.resolution.TypeSolver;

public class JavaOperatorCompiler
{
	private static CompilationUnit parse(Provider input, SymbolResolver resolver)
	{
		var config = new ParserConfiguration().setLanguageLevel(ParserConfiguration.LanguageLevel.JAVA_12)
		                                      .setSymbolResolver(resolver);

		var parser = new JavaParser(config);
		var parse = parser.parse(ParseStart.COMPILATION_UNIT, input);

		if(!parse.isSuccessful())
		{
			for(var problem : parse.getProblems())
				System.err.println(problem);

			return null;
		}

		return parse.getResult().get();
	}

	public static CompilationUnit process(Provider input, TypeSolver solver)
	{
		var resolver = new JavaSymbolSolver(solver);
		var compilationUnit = parse(input, resolver);

		if(compilationUnit == null)
			return null;

		new OperatorVisitor(resolver).visitLeavesFirst(compilationUnit);
		compilationUnit.setLineComment("This file has been auto-generated by javaopc, do not edit!");

		return compilationUnit;
	}
}
